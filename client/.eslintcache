[{"D:\\BlogMern\\client\\src\\index.js":"1","D:\\BlogMern\\client\\src\\reportWebVitals.js":"2","D:\\BlogMern\\client\\src\\App.js":"3","D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js":"4","D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js":"5","D:\\BlogMern\\client\\src\\components\\Home.js":"6","D:\\BlogMern\\client\\src\\components\\posts\\Add.js":"7","D:\\BlogMern\\client\\src\\components\\Layout\\Layout.js":"8","D:\\BlogMern\\client\\src\\components\\users\\List.js":"9","D:\\BlogMern\\client\\src\\components\\users\\Add.js":"10","D:\\BlogMern\\client\\src\\components\\posts\\List.js":"11","D:\\BlogMern\\client\\src\\components\\posts\\SinglePost.js":"12","D:\\BlogMern\\client\\src\\components\\Navbar.js":"13"},{"size":576,"mtime":1611687776293,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1611687776302,"results":"16","hashOfConfig":"15"},{"size":1351,"mtime":1612737711577,"results":"17","hashOfConfig":"15"},{"size":4348,"mtime":1613342334525,"results":"18","hashOfConfig":"15"},{"size":2531,"mtime":1612710762426,"results":"19","hashOfConfig":"15"},{"size":204,"mtime":1612549916652,"results":"20","hashOfConfig":"15"},{"size":1772,"mtime":1612549916655,"results":"21","hashOfConfig":"15"},{"size":220,"mtime":1612549916653,"results":"22","hashOfConfig":"15"},{"size":1632,"mtime":1612737783633,"results":"23","hashOfConfig":"15"},{"size":1722,"mtime":1612549916664,"results":"24","hashOfConfig":"15"},{"size":1149,"mtime":1612549916655,"results":"25","hashOfConfig":"15"},{"size":1209,"mtime":1612549916663,"results":"26","hashOfConfig":"15"},{"size":1276,"mtime":1613342318924,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"13zzkdd",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BlogMern\\client\\src\\index.js",["63"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Editable from './components/Tables/EditableTable';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["64","65"],"D:\\BlogMern\\client\\src\\reportWebVitals.js",[],"D:\\BlogMern\\client\\src\\App.js",[],"D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js",["66","67"],"import React, { useState,useEffect }from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nfunction Editable({row, col, table}) {\r\n    console.log(row)\r\n  \r\n    const [columns, setColumns] = useState(col);\r\n  \r\n    const [data, setData] = useState([]);\r\n    const handleDelete = async ()=>{\r\n      const usr= await axios.delete(`http://localhost:4000/api/${table}/6016e621bac7ab34b4256d87`)\r\n      console.log(usr)\r\n    }\r\n\r\n    \r\nuseEffect(() => {\r\n  setData(row)\r\n}, [row]);\r\n    //console.log(data)  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        icons={tableIcons}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                ///call api to save user in mongodb\r\n\r\n                const handleUpdate = async ()=>{\r\n                  const usr= await axios.update(`http://localhost:4000/api/${table}/6016e621bac7ab34b4256d87`)\r\n                  console.log(usr)\r\n                }\r\n               \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                ////call api of update\r\n                // handleUpdate(); \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: \r\n          oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                handleDelete();\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default Editable","D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js",["68","69","70"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { StayPrimaryLandscape } from '@material-ui/icons';\r\nimport { useState,useEffect }from 'react'\r\nimport axios from 'axios';\r\nimport { useParams} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\npaper: {\r\n    height: 500,\r\n    width: 400,\r\n    color: '#283593',\r\n    backgroundcolor: '#FBCB44',\r\n    margin: '0 auto',\r\n    textAligh: 'right',\r\n    padding: 15\r\n    },\r\n    input: {\r\n      height: 500,\r\n      width: '500%',\r\n    textAligh: 'center',\r\n     \r\n     \r\n    }   \r\n}));\r\n\r\n\r\nexport default function SingleUser() {\r\n  const classes = useStyles();\r\n  const [user, setuser] = useState({})\r\n  let {id} = useParams();\r\nuseEffect(()=>{\r\n// get single user\r\nconst getUser = async ()=>{\r\n  const res = await axios.get(`http://localhost:4000/api/users/${id}`)\r\n  console.log(res.data.data);\r\n  setuser(res.data.data)\r\n}\r\ngetUser()\r\n\r\n},[])\r\nconsole.log(id);\r\n\r\n  return (\r\n    <div >\r\n    \r\n    <Paper elevation={3} className={classes.paper}>\r\n      <h1>User Information</h1>\r\n      <TextField\r\n          id=\"standard-read-only-input\" \r\n          label=\"Read Only\"\r\n          defaultValue=\"Name: Abeer\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        /><br/><br/><br/>\r\n         <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"User Name: Abeer\" \r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        /><br/><br/><br/>\r\n         <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Email ID: abeer@gmail.com\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        /><br/><br/><br/>\r\n         <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Phone Number: 021345678\"\r\n          InputProps={{\r\n            readOnly: true,\r\n            \r\n          }}\r\n        />\r\n        <br/>\r\n        <br/><br/><br/>\r\n         <ButtonGroup variant=\"contained\" color=\"secondary\" aria-label=\"contained primary button group\">\r\n        <Button>Edit</Button>\r\n        <Button>Submit</Button>\r\n        <Button>Review</Button>\r\n      </ButtonGroup>\r\n\r\n      </Paper>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n","D:\\BlogMern\\client\\src\\components\\Home.js",["71"],"import React from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n           <h1> Welcome to Crud App - MERN BLog</h1> \r\n        </div>\r\n    )\r\n}\r\n","D:\\BlogMern\\client\\src\\components\\posts\\Add.js",["72"],"import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport { Input } from '@material-ui/core';\r\nimport FileBase64 from 'react-file-base64';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddPost() {\r\n  const [state, setstate] = useState({\r\n    description:'',title:'', author:'',image:'' \r\n  })\r\n  const [image, setimage] = useState('')\r\n  const classes = useStyles();\r\n\r\n\r\nconst handleSubmit =async (e)=>{\r\n  e.preventDefault();\r\n setstate({...state, image})\r\nconsole.log(state);\r\n  const res = await axios.post('http://localhost:4000/api/posts/',state)\r\n console.log(res);\r\n\r\n  }\r\n// console.log(image,\"my iamge\");\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"title\" onChange={(e)=>setstate({...state, title:e.target.value})} \r\n      label=\"title\" />\r\n      <br/>\r\n      <TextField id=\"description\" multiline onChange={(e)=>setstate({...state,description:e.target.value})} label=\" description\" />\r\n      <br/>\r\n      <TextField id=\"author\" onChange={(e)=>setstate({...state,author:e.target.value})} label=\" author\" />\r\n      <br/>\r\n      <FileBase64 multiple={false}\r\n      onDone={({base64})=>setimage(base64)}/>\r\n      {/* <TextField id=\"email\" onChange={(e)=>setstate({...state,email:e.target.value})} label=\" Enter Email\" />\r\n      <br/>*/}\r\n      <br/> \r\n      <Button type='submit' variant=\"contained\" color=\"primary\">\r\n         Add Post\r\n      </Button>\r\n\r\n      \r\n    </form>\r\n  );\r\n}","D:\\BlogMern\\client\\src\\components\\Layout\\Layout.js",[],"D:\\BlogMern\\client\\src\\components\\users\\List.js",["73","74","75"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Editable from '../Tables/EditableTable';\r\nimport SingleUser from './SingleUser';\r\n\r\nimport AddUser from './Add';\r\n//env\r\n//unique\r\n//encrypt\r\nfunction List() {\r\n    const [users, setusers] = useState([]);\r\n    const [col, setcol] = useState([\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'UserName', field: 'username', initialEditValue: '' },\r\n        { title: 'Email', field: 'email' },\r\n        { title: 'Password', field: 'password'},\r\n      ])\r\n    //http://localhost:4000/api/users/\r\n    // useEffect(\r\n    //     ()=>{\r\n    //         const fetchUsers = async ()=>{\r\n    //         const myusers = await axios.get('http://localhost:4000/api/users/')\r\n    //         console.log(\" fetchUsers ~ myusers\", myusers)\r\n    //         setusers(myusers.data)\r\n    //     } \r\n    //            fetchUsers();\r\n    //     },\r\n    //    []\r\n    // )\r\n    useEffect(\r\n        ()=>{\r\n            axios.get('http://localhost:4000/api/users/')\r\n            .then(res=>{\r\n                setusers(res.data)\r\n            })\r\n            .catch(err=>console.log(err))\r\n\r\n        }, []\r\n    )\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n            <Editable row={users} col={col} table='users' />\r\n           \r\n            {/* {\r\n                users.map((item)=>(\r\n                    <>\r\n                    <div>{item.name}</div>\r\n                    <div>{item.email}</div>\r\n                    <div>{item.phno}</div>\r\n                    </>\r\n                ))\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","D:\\BlogMern\\client\\src\\components\\users\\Add.js",[],"D:\\BlogMern\\client\\src\\components\\posts\\List.js",["76"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Editable from '../Tables/EditableTable';\r\n\r\nfunction PostList() {\r\n    const [posts, setposts] = useState([]);\r\n    const [col, setcol] = useState([\r\n        { title: 'title', field: 'title' },\r\n        { title: 'description', field: 'description', initialEditValue: '' },\r\n        { title: 'author', field: 'author' },\r\n      ])\r\n\r\n    useEffect(\r\n        ()=>{\r\n            axios.get('http://localhost:4000/api/posts/')\r\n            .then(res=>{\r\n                console.log(res);\r\n                setposts(res.data.posts)\r\n            })\r\n            .catch(err=>console.log(err))\r\n\r\n        }, []\r\n    )\r\n    console.log(posts)\r\n    return (\r\n        <div>\r\n            <Editable row={posts} col={col} table='posts' />\r\n           \r\n            {/* {\r\n                posts.map((item)=>(\r\n                    <>\r\n                    <div>{item.name}</div>\r\n                    <div>{item.email}</div>\r\n                    <div>{item.phno}</div>\r\n                    </>\r\n                ))\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","D:\\BlogMern\\client\\src\\components\\posts\\SinglePost.js",["77","78"],"import axios from 'axios';\r\nimport React,{useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(16),\r\n        height: theme.spacing(16),\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction SinglePost() {\r\n    const [post, setpost] = useState({})\r\n    let {id} = useParams();\r\nuseEffect(()=>{\r\n// get single user\r\nconst getPost = async ()=>{\r\n    const res = await axios.get(`http://localhost:4000/api/posts/${id}`)\r\n    console.log(res.data.post);\r\n    setpost(res.data.post)\r\n}\r\ngetPost()\r\n\r\n},[])\r\nconsole.log(id);\r\n    return (\r\n        <div style={{width:'500', margin:'auto'}}>\r\n           <Paper elevation={3}>\r\n           <div>title={post.title}</div>\r\n           <div>desc={post.description}</div>\r\n           <div>desc={post.author}</div>\r\n           <div><img src={post.image} alt='' height='100' width='100'/></div>\r\n           </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost\r\n","D:\\BlogMern\\client\\src\\components\\Navbar.js",[],{"ruleId":"79","severity":1,"message":"80","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":16},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":43,"column":21,"nodeType":"81","messageId":"82","endLine":43,"endColumn":31},{"ruleId":"79","severity":1,"message":"88","line":69,"column":23,"nodeType":"81","messageId":"82","endLine":69,"endColumn":35},{"ruleId":"79","severity":1,"message":"89","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":30},{"ruleId":"79","severity":1,"message":"90","line":35,"column":10,"nodeType":"81","messageId":"82","endLine":35,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":46,"column":3,"nodeType":"93","endLine":46,"endColumn":5,"suggestions":"94"},{"ruleId":"79","severity":1,"message":"95","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"96","line":6,"column":10,"nodeType":"81","messageId":"82","endLine":6,"endColumn":15},{"ruleId":"79","severity":1,"message":"97","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"79","severity":1,"message":"98","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":15},{"ruleId":"79","severity":1,"message":"99","line":12,"column":17,"nodeType":"81","messageId":"82","endLine":12,"endColumn":23},{"ruleId":"79","severity":1,"message":"99","line":7,"column":17,"nodeType":"81","messageId":"82","endLine":7,"endColumn":23},{"ruleId":"79","severity":1,"message":"100","line":7,"column":7,"nodeType":"81","messageId":"82","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":31,"column":3,"nodeType":"93","endLine":31,"endColumn":5,"suggestions":"101"},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'setColumns' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","'StayPrimaryLandscape' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'Navbar' is defined but never used.","'Input' is defined but never used.","'SingleUser' is defined but never used.","'AddUser' is defined but never used.","'setcol' is assigned a value but never used.","'useStyles' is assigned a value but never used.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},"Update the dependencies array to be: [id]",{"range":"109","text":"110"},{"range":"111","text":"110"},[1159,1161],"[id]",[800,802]]