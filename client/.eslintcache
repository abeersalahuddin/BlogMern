<<<<<<< HEAD
[{"D:\\BlogMern\\client\\src\\index.js":"1","D:\\BlogMern\\client\\src\\App.js":"2","D:\\BlogMern\\client\\src\\reportWebVitals.js":"3","D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js":"4","D:\\BlogMern\\client\\src\\components\\users\\List.js":"5","D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js":"6"},{"size":576,"mtime":1611687776293,"results":"7","hashOfConfig":"8"},{"size":583,"mtime":1612535793980,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611687776302,"results":"10","hashOfConfig":"8"},{"size":1927,"mtime":1611687776293,"results":"11","hashOfConfig":"8"},{"size":1011,"mtime":1612535779033,"results":"12","hashOfConfig":"8"},{"size":2113,"mtime":1612535773302,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"13zzkdd",{"filePath":"18","messages":"19","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BlogMern\\client\\src\\index.js",["29"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Editable from './components/Tables/EditableTable';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["30","31"],"D:\\BlogMern\\client\\src\\App.js",["32","33","34"],"D:\\BlogMern\\client\\src\\reportWebVitals.js",[],"D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js",["35"],"import React, { useState }from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nfunction Editable({users}) {\r\n    console.log(users)\r\n  \r\n    const [columns, setColumns] = useState([\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'UserName', field: 'usrname', initialEditValue: '' },\r\n      { title: 'Email', field: 'email' },\r\n      { title: 'Phone#', field: 'phno'},\r\n    ]);\r\n  \r\n    const [data, setData] = useState(users);\r\n    //   const [data, setData] = useState([\r\n    //     { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n    //     { name: 'Zerya Bet√ºl', surname: 'Baran', birthYear: 2017, birthCity: 34 },\r\n    //   ]);\r\n    console.log(users)  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default Editable","D:\\BlogMern\\client\\src\\components\\users\\List.js",["36"],"D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js",["37"],{"ruleId":"38","severity":1,"message":"39","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"38","severity":1,"message":"46","line":2,"column":9,"nodeType":"40","messageId":"41","endLine":2,"endColumn":18},{"ruleId":"38","severity":1,"message":"47","line":6,"column":16,"nodeType":"40","messageId":"41","endLine":6,"endColumn":23},{"ruleId":"48","severity":2,"message":"49","line":15,"column":8,"nodeType":"50","endLine":15,"endColumn":18},{"ruleId":"38","severity":1,"message":"51","line":7,"column":21,"nodeType":"40","messageId":"41","endLine":7,"endColumn":31},{"ruleId":"38","severity":1,"message":"52","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":18},{"ruleId":"38","severity":1,"message":"53","line":7,"column":10,"nodeType":"40","messageId":"41","endLine":7,"endColumn":30},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'useEffect' is defined but never used.","'setuser' is assigned a value but never used.","react/jsx-no-undef","'SingleUser' is not defined.","JSXIdentifier","'setColumns' is assigned a value but never used.","'SingleUser' is defined but never used.","'StayPrimaryLandscape' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"E:\\LWF-Batch1\\BlogMern\\client\\src\\index.js":"1","E:\\LWF-Batch1\\BlogMern\\client\\src\\reportWebVitals.js":"2","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js":"3","E:\\LWF-Batch1\\BlogMern\\client\\src\\App.js":"4","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\Add.js":"5","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Home.js":"6","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\List.js":"7","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Navbar.js":"8","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Layout\\Layout.js":"9","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\List.js":"10","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\Add.js":"11","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\SingleUser.js":"12","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\SinglePost.js":"13"},{"size":558,"mtime":1611595441620,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":4088,"mtime":1612372359653,"results":"17","hashOfConfig":"15"},{"size":1272,"mtime":1612548490964,"results":"18","hashOfConfig":"15"},{"size":1722,"mtime":1612370842849,"results":"19","hashOfConfig":"15"},{"size":204,"mtime":1612201242486,"results":"20","hashOfConfig":"15"},{"size":1590,"mtime":1612371167330,"results":"21","hashOfConfig":"15"},{"size":1203,"mtime":1612546067475,"results":"22","hashOfConfig":"15"},{"size":220,"mtime":1612201228566,"results":"23","hashOfConfig":"15"},{"size":1149,"mtime":1612369491615,"results":"24","hashOfConfig":"15"},{"size":1772,"mtime":1612549478570,"results":"25","hashOfConfig":"15"},{"size":1033,"mtime":1612545923890,"results":"26","hashOfConfig":"15"},{"size":1209,"mtime":1612548921461,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1m86q7q",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\LWF-Batch1\\BlogMern\\client\\src\\index.js",["60"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Editable from './components/Tables/EditableTable';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["61","62"],"E:\\LWF-Batch1\\BlogMern\\client\\src\\reportWebVitals.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js",["63"],"import React, { useState,useEffect }from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios';\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nfunction Editable({row, col, table}) {\r\n    console.log(row)\r\n  \r\n    const [columns, setColumns] = useState(col);\r\n  \r\n    const [data, setData] = useState([]);\r\n    const handleDelete = async ()=>{\r\n      const usr= await axios.delete(`http://localhost:4000/api/${table}/6016e621bac7ab34b4256d87`)\r\n      console.log(usr)\r\n    }\r\nuseEffect(() => {\r\n  setData(row)\r\n}, [row]);\r\n    //console.log(data)  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        icons={tableIcons}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                ///call api to save user in mongodb\r\n               \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n                ////call api of update\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: \r\n          oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n\r\n                handleDelete();\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default Editable","E:\\LWF-Batch1\\BlogMern\\client\\src\\App.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\Add.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Home.js",["64"],"import React from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n           <h1> Welcome to Crud App - MERN BLog</h1> \r\n        </div>\r\n    )\r\n}\r\n","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\List.js",["65","66"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Editable from '../Tables/EditableTable';\r\nimport AddUser from './Add';\r\n//env\r\n//unique\r\n//encrypt\r\nfunction List() {\r\n    const [users, setusers] = useState([]);\r\n    const [col, setcol] = useState([\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'UserName', field: 'username', initialEditValue: '' },\r\n        { title: 'Email', field: 'email' },\r\n        { title: 'Password', field: 'password'},\r\n      ])\r\n    //http://localhost:4000/api/users/\r\n    // useEffect(\r\n    //     ()=>{\r\n    //         const fetchUsers = async ()=>{\r\n    //         const myusers = await axios.get('http://localhost:4000/api/users/')\r\n    //         console.log(\" fetchUsers ~ myusers\", myusers)\r\n    //         setusers(myusers.data)\r\n    //     } \r\n    //            fetchUsers();\r\n    //     },\r\n    //    []\r\n    // )\r\n    useEffect(\r\n        ()=>{\r\n            axios.get('http://localhost:4000/api/users/')\r\n            .then(res=>{\r\n                setusers(res.data)\r\n            })\r\n            .catch(err=>console.log(err))\r\n\r\n        }, []\r\n    )\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n            <Editable row={users} col={col} table='users' />\r\n           \r\n            {/* {\r\n                users.map((item)=>(\r\n                    <>\r\n                    <div>{item.name}</div>\r\n                    <div>{item.email}</div>\r\n                    <div>{item.phno}</div>\r\n                    </>\r\n                ))\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Navbar.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Layout\\Layout.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\List.js",["67"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Editable from '../Tables/EditableTable';\r\n\r\nfunction PostList() {\r\n    const [posts, setposts] = useState([]);\r\n    const [col, setcol] = useState([\r\n        { title: 'title', field: 'title' },\r\n        { title: 'description', field: 'description', initialEditValue: '' },\r\n        { title: 'author', field: 'author' },\r\n      ])\r\n\r\n    useEffect(\r\n        ()=>{\r\n            axios.get('http://localhost:4000/api/posts/')\r\n            .then(res=>{\r\n                console.log(res);\r\n                setposts(res.data.posts)\r\n            })\r\n            .catch(err=>console.log(err))\r\n\r\n        }, []\r\n    )\r\n    console.log(posts)\r\n    return (\r\n        <div>\r\n            <Editable row={posts} col={col} />\r\n           \r\n            {/* {\r\n                posts.map((item)=>(\r\n                    <>\r\n                    <div>{item.name}</div>\r\n                    <div>{item.email}</div>\r\n                    <div>{item.phno}</div>\r\n                    </>\r\n                ))\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\Add.js",["68"],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\SingleUser.js",["69","70"],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\posts\\SinglePost.js",["71","72"],{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":43,"column":21,"nodeType":"75","messageId":"76","endLine":43,"endColumn":31},{"ruleId":"73","severity":1,"message":"82","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"83","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":15},{"ruleId":"73","severity":1,"message":"84","line":10,"column":17,"nodeType":"75","messageId":"76","endLine":10,"endColumn":23},{"ruleId":"73","severity":1,"message":"84","line":7,"column":17,"nodeType":"75","messageId":"76","endLine":7,"endColumn":23},{"ruleId":"73","severity":1,"message":"85","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":15},{"ruleId":"73","severity":1,"message":"86","line":7,"column":7,"nodeType":"75","messageId":"76","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":31,"column":3,"nodeType":"89","endLine":31,"endColumn":5,"suggestions":"90"},{"ruleId":"73","severity":1,"message":"86","line":7,"column":7,"nodeType":"75","messageId":"76","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":31,"column":3,"nodeType":"89","endLine":31,"endColumn":5,"suggestions":"91"},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'setColumns' is assigned a value but never used.","'Navbar' is defined but never used.","'AddUser' is defined but never used.","'setcol' is assigned a value but never used.","'Input' is defined but never used.","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},"Update the dependencies array to be: [id]",{"range":"99","text":"100"},{"range":"101","text":"100"},[800,802],"[id]",[800,802]]
>>>>>>> 0c6624c3b192a768aa123f3605f254f8df355fec
