[{"E:\\LWF-Batch1\\BlogMern\\client\\src\\index.js":"1","E:\\LWF-Batch1\\BlogMern\\client\\src\\App.js":"2","E:\\LWF-Batch1\\BlogMern\\client\\src\\reportWebVitals.js":"3","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\List.js":"4","E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js":"5"},{"size":558,"mtime":1611595441620,"results":"6","hashOfConfig":"7"},{"size":478,"mtime":1611592740280,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1239,"mtime":1611765253587,"results":"10","hashOfConfig":"7"},{"size":2117,"mtime":1611765720582,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1m86q7q",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"E:\\LWF-Batch1\\BlogMern\\client\\src\\index.js",["26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Editable from './components/Tables/EditableTable';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["27","28"],"E:\\LWF-Batch1\\BlogMern\\client\\src\\App.js",["29","30"],"import './App.css';\nimport {useEffect, useState} from 'react'\nimport List from './components/users/List';\nfunction App() {\n  const [user, setuser] = useState([])\n//   useEffect(()=>{\n// axios.get('http://localhost:4000/api/users')\n// .then(res=>setuser(res))\n//   },[])\n  console.log(user)\n  return (\n    <div className='App'>\n      <List/>\n      {/* {user.map(\n        (item) => (\n          <div>{item.name}</div>\n        )\n\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n","E:\\LWF-Batch1\\BlogMern\\client\\src\\reportWebVitals.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\users\\List.js",[],"E:\\LWF-Batch1\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js",["31"],"import React, { useState,useEffect }from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nfunction Editable({users}) {\r\n    console.log(users)\r\n  \r\n    const [columns, setColumns] = useState([\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'UserName', field: 'usrname', initialEditValue: '' },\r\n      { title: 'Email', field: 'email' },\r\n      { title: 'Phone#', field: 'phno'},\r\n    ]);\r\n  \r\n    const [data, setData] = useState([]);\r\nuseEffect(() => {\r\n  setData(users)\r\n}, [users]);\r\n    //   const [data, setData] = useState([\r\n//     {\r\n//       id: 1,\r\n//       name:'faiza',\r\n//       usrname: 'fazzyA',\r\n//       email:'faz.pak@gmail.com',\r\n//       phno:'3340242139'\r\n//   },\r\n//   {\r\n//       id: 2,\r\n//       name:'umair2',\r\n//       usrname: 'umair90',\r\n//       email:'umair@gmail.com',\r\n//       phno:'3340242139'\r\n\r\n//   }\r\n\r\n// ]);\r\n    console.log(data)  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default Editable",{"ruleId":"32","severity":1,"message":"33","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":16},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":2,"column":9,"nodeType":"34","messageId":"35","endLine":2,"endColumn":18},{"ruleId":"32","severity":1,"message":"41","line":5,"column":16,"nodeType":"34","messageId":"35","endLine":5,"endColumn":23},{"ruleId":"32","severity":1,"message":"42","line":7,"column":21,"nodeType":"34","messageId":"35","endLine":7,"endColumn":31},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'useEffect' is defined but never used.","'setuser' is assigned a value but never used.","'setColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]