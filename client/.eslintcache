[{"D:\\BlogMern\\client\\src\\index.js":"1","D:\\BlogMern\\client\\src\\App.js":"2","D:\\BlogMern\\client\\src\\reportWebVitals.js":"3","D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js":"4","D:\\BlogMern\\client\\src\\components\\users\\List.js":"5","D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js":"6"},{"size":576,"mtime":1611687776293,"results":"7","hashOfConfig":"8"},{"size":583,"mtime":1612535793980,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611687776302,"results":"10","hashOfConfig":"8"},{"size":1927,"mtime":1611687776293,"results":"11","hashOfConfig":"8"},{"size":1011,"mtime":1612535779033,"results":"12","hashOfConfig":"8"},{"size":2113,"mtime":1612535773302,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"13zzkdd",{"filePath":"18","messages":"19","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BlogMern\\client\\src\\index.js",["29"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Editable from './components/Tables/EditableTable';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["30","31"],"D:\\BlogMern\\client\\src\\App.js",["32","33","34"],"D:\\BlogMern\\client\\src\\reportWebVitals.js",[],"D:\\BlogMern\\client\\src\\components\\Tables\\EditableTable.js",["35"],"import React, { useState }from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nfunction Editable({users}) {\r\n    console.log(users)\r\n  \r\n    const [columns, setColumns] = useState([\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'UserName', field: 'usrname', initialEditValue: '' },\r\n      { title: 'Email', field: 'email' },\r\n      { title: 'Phone#', field: 'phno'},\r\n    ]);\r\n  \r\n    const [data, setData] = useState(users);\r\n    //   const [data, setData] = useState([\r\n    //     { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n    //     { name: 'Zerya Bet√ºl', surname: 'Baran', birthYear: 2017, birthCity: 34 },\r\n    //   ]);\r\n    console.log(users)  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                setData([...dataUpdate]);\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default Editable","D:\\BlogMern\\client\\src\\components\\users\\List.js",["36"],"D:\\BlogMern\\client\\src\\components\\users\\SingleUser.js",["37"],{"ruleId":"38","severity":1,"message":"39","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"38","severity":1,"message":"46","line":2,"column":9,"nodeType":"40","messageId":"41","endLine":2,"endColumn":18},{"ruleId":"38","severity":1,"message":"47","line":6,"column":16,"nodeType":"40","messageId":"41","endLine":6,"endColumn":23},{"ruleId":"48","severity":2,"message":"49","line":15,"column":8,"nodeType":"50","endLine":15,"endColumn":18},{"ruleId":"38","severity":1,"message":"51","line":7,"column":21,"nodeType":"40","messageId":"41","endLine":7,"endColumn":31},{"ruleId":"38","severity":1,"message":"52","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":18},{"ruleId":"38","severity":1,"message":"53","line":7,"column":10,"nodeType":"40","messageId":"41","endLine":7,"endColumn":30},"no-unused-vars","'Editable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'useEffect' is defined but never used.","'setuser' is assigned a value but never used.","react/jsx-no-undef","'SingleUser' is not defined.","JSXIdentifier","'setColumns' is assigned a value but never used.","'SingleUser' is defined but never used.","'StayPrimaryLandscape' is defined but never used.","no-global-assign","no-unsafe-negation"]